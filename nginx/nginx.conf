worker_processes  auto;
events { worker_connections 4096; }

http {
  # 도커 DNS 재해석 안정화
  resolver 127.0.0.11 ipv6=off valid=30s;

  upstream backend {
    server baller-spring-1:8080;
    server baller-spring-2:8080;
    keepalive 32;
  }

  map $http_upgrade $connection_upgrade { default upgrade; '' close; }

  server {
    listen 80;
    server_name _;

    # 헬스 & exporter
    location = /nginx/health { return 200 'ok'; add_header Content-Type text/plain; }
    location = /nginx_status { stub_status; allow all; }

    # 실제 API 프록시 (SSE 안전)
    location /api/ {
      proxy_pass http://backend;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_buffering off; proxy_cache off; chunked_transfer_encoding off;
      proxy_read_timeout 1h; proxy_send_timeout 1h;

      # 분산 확인용
      add_header X-Upstream $upstream_addr always;
    }

    location / {
      proxy_pass http://backend;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # 정적은 버퍼링 켜둬도 됨(원한다면 기본값으로 두면 됨)
      add_header X-Upstream $upstream_addr always;
    }

  }
}

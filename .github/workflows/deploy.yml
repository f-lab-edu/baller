name: build-and-deploy
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write   # GHCR push

concurrency:
  group: prod-deploy
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/f-lab-edu/baller-app
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short,enable=true

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script_stop: true
          envs: GIT_SSH_COMMAND
          script: |
            set -euo pipefail
            # (선택) private 패키지면 로그인용 env 넘김
            if [ -n "${{ secrets.GHCR_TOKEN || '' }}" ]; then
              export GHCR_USER="${{ secrets.GHCR_USER }}"
              export GHCR_TOKEN="${{ secrets.GHCR_TOKEN }}"
            fi

            # 배포
            export IMAGE_TAG=latest
            /home/ec2-user/project/deploy.sh

            # 상태 확인
            docker compose -f /home/ec2-user/project/docker-compose.prod.yml ps

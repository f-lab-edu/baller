services:
  spring:
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - "8080"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: stress
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: "6379"
  nginx:
    image: nginx:1.25-alpine
    depends_on:
      - spring
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.11.0
    command: [ "-nginx.scrape-uri", "http://nginx/nginx_status" ]
    depends_on:
      - nginx
    expose:
      - "9113"
  postgres:
    image: postgres:15
    container_name: postgres
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1024M
        reservations:
          cpus: '1.0'
          memory: 1024M
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: 'example'
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: 'password'
      TZ: Asia/Seoul
    volumes:
      - ./db/postgres/data:/var/lib/postgresql/data
      - ./db/postgres/init:/docker-entrypoint-initdb.d
  postgres-exporter:
    container_name: postgres-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/example?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
  redis:
    image: redis:7.2-alpine
    container_name: redis
    command: [ "redis-server", "--appendonly", "yes" ]   # Streams 쓰면 AOF 권장
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - ./db/redis/data:/data
